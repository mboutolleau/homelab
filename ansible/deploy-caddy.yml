---
- hosts: all
  vars:
    caddy_version: "2.4.3"
    caddy_checksum: "d79d27890418816c2d30d4d01706fba21b6882bd15f268efeebd63b01a44c5d9fdd5eca59caf953f17f3c2c297e757867c1a2280274cebf54c973a2fcbabcb81"

  tasks:
  - name: Create temporary download directory
    tempfile:
      state: directory
    register: tempdir

  - name: Download Caddy Debian package from official GitHub Page
    get_url:
      # Caddy Debian package for Linux amd64
      url: "https://github.com/caddyserver/caddy/releases/download/v{{ caddy_version }}/caddy_{{ caddy_version }}_linux_amd64.deb"
      dest: "{{ tempdir.path }}/caddy.deb"
      # SHA-512 sum of the Debian package from the cheksums file of the GitHub release page
      checksum: "sha512:{{ caddy_checksum }}"

  - name: Install Caddy Debian package
    apt:
      deb: "{{ tempdir.path }}/caddy.deb"
    become: yes
    register: deb_install_status
    # Execute the task only on Debian-based hosts
    when: ansible_facts['os_family'] == "Debian"

  - name: Remove the temporary directory
    file:
      path: "{{ tempdir.path }}"
      state: absent
    when: tempdir.path is defined

  - name: Create caddy directory, if it does not exist
    file:
      path: /etc/caddy
      state: directory
      owner: root
      group: root
      mode: '0755'
    become: yes

  - name: Copy provided Caddyfile example
    copy:
      dest: /etc/caddy/Caddyfile
      src: ../software/caddy/Caddyfile
      # The file will only be transferred if the destination does not exist
      force: no
      owner: root
      group: root
      mode: '0644'

  - name: Copy provided systemd unit
    copy:
      dest: /etc/systemd/system/caddy.service
      src: ../software/caddy/caddy.service
      # The file will only be transferred if the destination does not exist
      force: no
      owner: root
      group: root
      mode: '0644'
    register: unit_copy_status

  - name: Reload systemd daemon
    systemd:
      daemon_reload: yes
    become: yes
    # Run only when a new systemd unit was copied
    when: unit_copy_status.changed

  - name: Restart Caddy service
    systemd:
      name: caddy
      state: restarted
    become: yes
    # Run only when a new Debian package was installed
    when: deb_install_status.changed